basePath: /
definitions:
  delivery.JSONBadReqResult:
    properties:
      data: {}
      meta:
        properties:
          message:
            example: failed
            type: string
          messages:
            items:
              type: string
            type: array
          status:
            example: 400
            type: integer
        type: object
    type: object
  delivery.JSONInternalResult:
    properties:
      data: {}
      meta:
        properties:
          message:
            example: error database
            type: string
          messages:
            items:
              type: string
            type: array
          status:
            example: 500
            type: integer
        type: object
    type: object
  delivery.JSONSuccessResult:
    properties:
      data: {}
      meta:
        properties:
          message:
            example: success
            type: string
          messages:
            items:
              type: string
            type: array
          status:
            example: 200
            type: integer
        type: object
    type: object
  request.EditProduct:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      stocks:
        type: integer
    required:
    - description
    - id
    - name
    - price
    - stocks
    type: object
  request.PasswordUpdate:
    properties:
      new_password:
        minLength: 8
        type: string
      old_password:
        type: string
    required:
    - old_password
    type: object
  request.UserRegister:
    properties:
      email:
        type: string
      password:
        type: string
      phone_number:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
host: localhost:1234
info:
  contact: {}
  description: Dokumentasi Swagger e Slurr
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: PPOB Service
  version: "1.0"
paths:
  /v1/bestseller/{id}:
    get:
      consumes:
      - application/json
      description: Get Best Seller each Category
      parameters:
      - description: id category
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.JSONSuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.JSONBadReqResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.JSONInternalResult'
      summary: Get Best Seller
      tags:
      - Product
  /v1/login:
    post:
      consumes:
      - multipart/form-data
      description: login user to server with json.
      parameters:
      - default: admin
        description: email
        in: formData
        name: email
        required: true
        type: string
      - default: admin
        description: password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.JSONSuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.JSONBadReqResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.JSONInternalResult'
      summary: Login User to server
      tags:
      - User
  /v1/product:
    put:
      consumes:
      - application/json
      description: Edit Product via JSON
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.EditProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.JSONSuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.JSONBadReqResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.JSONInternalResult'
      security:
      - BearerAuth: []
      summary: Edit Product
      tags:
      - Product
  /v1/product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product via ID
      parameters:
      - description: ID Product
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.JSONSuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.JSONBadReqResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.JSONInternalResult'
      security:
      - BearerAuth: []
      summary: Delete Product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: Get Product via Param
      parameters:
      - description: ID Category
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.JSONSuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.JSONBadReqResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.JSONInternalResult'
      summary: GetProduct via Params
      tags:
      - Product
  /v1/product/pln:
    get:
      consumes:
      - application/json
      description: Get Random Tagihan Product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.JSONSuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.JSONBadReqResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.JSONInternalResult'
      summary: Get Random Product
      tags:
      - Product
  /v1/register:
    post:
      consumes:
      - application/json
      description: register user to server with json.
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.JSONSuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.JSONBadReqResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.JSONInternalResult'
      summary: Register User to server
      tags:
      - User
  /v1/user:
    get:
      consumes:
      - application/json
      description: Get Detail User Data.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.JSONSuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.JSONBadReqResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.JSONInternalResult'
      security:
      - BearerAuth: []
      summary: Get Detail User
      tags:
      - User
  /v1/user/change:
    post:
      consumes:
      - application/json
      description: Change Password user to server with json.
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.PasswordUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery.JSONSuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.JSONBadReqResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.JSONInternalResult'
      security:
      - BearerAuth: []
      summary: Change Password
      tags:
      - User
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
